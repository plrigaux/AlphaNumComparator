package com.plr.comparator
/*
 * This Spock specification was auto generated by running the Gradle 'init' task
 * by 'plr' at '4/23/16 9:04 PM' with Gradle 2.12
 *
 * @author plr, @date 4/23/16 9:04 PM
 */


import com.plr.comparator.SpaceInsensitiveComparator;

import spock.lang.Specification

import com.plr.comparator.SpaceCollapseInsensitiveComparator;
import com.plr.comparator.SpaceInsensitiveComparator;

import com.plr.comparator.natural.AlphaTokenComparable;


class IgnoreSpaceTest extends Specification {



	def "Pure numbers comparison equal"() {

		given:

		expect:

		SpaceInsensitiveComparator.getInstance().compare(smaller, bigger) == 0;
//		AlphaTokenComparable.compareSpaceInsensitve(smaller, bigger) == 0;

		where:

		smaller 		| bigger
		"a"			| "a"
		"abc"	| "abc"
		"a"			| "a "
		"a "			| "a"
		"abc"	| "abc "
		"a"			| " a "
		"abc"	| " a b   c "
		"  \n   abc  \n"	| " a b   c "
		" "	| ""
		""	| "\n"
	}

	def "Pure numbers comparison smaller"() {

		given:

		expect:

		SpaceInsensitiveComparator.getInstance().compare(smaller, bigger)  < 0;
		SpaceInsensitiveComparator.getInstance().compare(bigger, smaller)  > 0;

		where:

		smaller 		| bigger
		"a"			| "b"
		"ab"		| "abc"
		" ab"		| "abc"
		" a  b "	| "abc"
	}

	def "Space Collapse Insensitive comparison equal"() {

		given:

		expect:


		SpaceCollapseInsensitiveComparator.getInstance().compare(smaller, bigger) == 0;

		where:

		smaller 		| bigger
		"a"			| "a"
		"abc"	| "abc"
		"ab c"	| "ab   c"
		"b "			| "b\n\n"
		"abc"	| "abc "
		"   a "			| " a          "
		" "	| "\n\n\n\n\n\n\n\n"
		""	| ""
	}
	
	def "Space Collapse Insensitive comparison smaller greater"() {

		given:

		expect:

		SpaceCollapseInsensitiveComparator.getInstance().compare(smaller, bigger) < 0;
		SpaceCollapseInsensitiveComparator.getInstance().compare(bigger, smaller) > 0;

		where:

		smaller 		| bigger
		"a"				| "a "
		" c"			| "c"
		"d "			| "d    g"

	}
}
